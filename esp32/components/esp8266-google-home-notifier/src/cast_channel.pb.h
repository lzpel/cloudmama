/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Sun Mar 11 18:21:30 2018. */

#ifndef PB_EXTENSIONS_API_CAST_CHANNEL_CAST_CHANNEL_PB_H_INCLUDED
#define PB_EXTENSIONS_API_CAST_CHANNEL_CAST_CHANNEL_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _extensions_api_cast_channel_CastMessage_ProtocolVersion {
    extensions_api_cast_channel_CastMessage_ProtocolVersion_CASTV2_1_0 = 0
} extensions_api_cast_channel_CastMessage_ProtocolVersion;
#define _extensions_api_cast_channel_CastMessage_ProtocolVersion_MIN extensions_api_cast_channel_CastMessage_ProtocolVersion_CASTV2_1_0
#define _extensions_api_cast_channel_CastMessage_ProtocolVersion_MAX extensions_api_cast_channel_CastMessage_ProtocolVersion_CASTV2_1_0
#define _extensions_api_cast_channel_CastMessage_ProtocolVersion_ARRAYSIZE ((extensions_api_cast_channel_CastMessage_ProtocolVersion)(extensions_api_cast_channel_CastMessage_ProtocolVersion_CASTV2_1_0+1))

typedef enum _extensions_api_cast_channel_CastMessage_PayloadType {
    extensions_api_cast_channel_CastMessage_PayloadType_STRING = 0,
    extensions_api_cast_channel_CastMessage_PayloadType_BINARY = 1
} extensions_api_cast_channel_CastMessage_PayloadType;
#define _extensions_api_cast_channel_CastMessage_PayloadType_MIN extensions_api_cast_channel_CastMessage_PayloadType_STRING
#define _extensions_api_cast_channel_CastMessage_PayloadType_MAX extensions_api_cast_channel_CastMessage_PayloadType_BINARY
#define _extensions_api_cast_channel_CastMessage_PayloadType_ARRAYSIZE ((extensions_api_cast_channel_CastMessage_PayloadType)(extensions_api_cast_channel_CastMessage_PayloadType_BINARY+1))

typedef enum _extensions_api_cast_channel_AuthError_ErrorType {
    extensions_api_cast_channel_AuthError_ErrorType_INTERNAL_ERROR = 0,
    extensions_api_cast_channel_AuthError_ErrorType_NO_TLS = 1
} extensions_api_cast_channel_AuthError_ErrorType;
#define _extensions_api_cast_channel_AuthError_ErrorType_MIN extensions_api_cast_channel_AuthError_ErrorType_INTERNAL_ERROR
#define _extensions_api_cast_channel_AuthError_ErrorType_MAX extensions_api_cast_channel_AuthError_ErrorType_NO_TLS
#define _extensions_api_cast_channel_AuthError_ErrorType_ARRAYSIZE ((extensions_api_cast_channel_AuthError_ErrorType)(extensions_api_cast_channel_AuthError_ErrorType_NO_TLS+1))

/* Struct definitions */
typedef struct _extensions_api_cast_channel_AuthChallenge {
    char dummy_field;
/* @@protoc_insertion_point(struct:extensions_api_cast_channel_AuthChallenge) */
} extensions_api_cast_channel_AuthChallenge;

typedef struct _extensions_api_cast_channel_AuthResponse {
    pb_callback_t signature;
    pb_callback_t client_auth_certificate;
    pb_callback_t client_ca;
/* @@protoc_insertion_point(struct:extensions_api_cast_channel_AuthResponse) */
} extensions_api_cast_channel_AuthResponse;

typedef struct _extensions_api_cast_channel_AuthError {
    extensions_api_cast_channel_AuthError_ErrorType error_type;
/* @@protoc_insertion_point(struct:extensions_api_cast_channel_AuthError) */
} extensions_api_cast_channel_AuthError;

typedef struct _extensions_api_cast_channel_CastMessage {
    extensions_api_cast_channel_CastMessage_ProtocolVersion protocol_version;
    pb_callback_t source_id;
    pb_callback_t destination_id;
    pb_callback_t namespace_str;
    extensions_api_cast_channel_CastMessage_PayloadType payload_type;
    pb_callback_t payload_utf8;
    pb_callback_t payload_binary;
/* @@protoc_insertion_point(struct:extensions_api_cast_channel_CastMessage) */
} extensions_api_cast_channel_CastMessage;

typedef struct _extensions_api_cast_channel_DeviceAuthMessage {
    bool has_challenge;
    extensions_api_cast_channel_AuthChallenge challenge;
    bool has_response;
    extensions_api_cast_channel_AuthResponse response;
    bool has_error;
    extensions_api_cast_channel_AuthError error;
/* @@protoc_insertion_point(struct:extensions_api_cast_channel_DeviceAuthMessage) */
} extensions_api_cast_channel_DeviceAuthMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define extensions_api_cast_channel_CastMessage_init_default {(extensions_api_cast_channel_CastMessage_ProtocolVersion)0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, (extensions_api_cast_channel_CastMessage_PayloadType)0, {{NULL}, NULL}, {{NULL}, NULL}}
#define extensions_api_cast_channel_AuthChallenge_init_default {0}
#define extensions_api_cast_channel_AuthResponse_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define extensions_api_cast_channel_AuthError_init_default {(extensions_api_cast_channel_AuthError_ErrorType)0}
#define extensions_api_cast_channel_DeviceAuthMessage_init_default {false, extensions_api_cast_channel_AuthChallenge_init_default, false, extensions_api_cast_channel_AuthResponse_init_default, false, extensions_api_cast_channel_AuthError_init_default}
#define extensions_api_cast_channel_CastMessage_init_zero {(extensions_api_cast_channel_CastMessage_ProtocolVersion)0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, (extensions_api_cast_channel_CastMessage_PayloadType)0, {{NULL}, NULL}, {{NULL}, NULL}}
#define extensions_api_cast_channel_AuthChallenge_init_zero {0}
#define extensions_api_cast_channel_AuthResponse_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define extensions_api_cast_channel_AuthError_init_zero {(extensions_api_cast_channel_AuthError_ErrorType)0}
#define extensions_api_cast_channel_DeviceAuthMessage_init_zero {false, extensions_api_cast_channel_AuthChallenge_init_zero, false, extensions_api_cast_channel_AuthResponse_init_zero, false, extensions_api_cast_channel_AuthError_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define extensions_api_cast_channel_AuthResponse_signature_tag 1
#define extensions_api_cast_channel_AuthResponse_client_auth_certificate_tag 2
#define extensions_api_cast_channel_AuthResponse_client_ca_tag 3
#define extensions_api_cast_channel_AuthError_error_type_tag 1
#define extensions_api_cast_channel_CastMessage_protocol_version_tag 1
#define extensions_api_cast_channel_CastMessage_source_id_tag 2
#define extensions_api_cast_channel_CastMessage_destination_id_tag 3
#define extensions_api_cast_channel_CastMessage_namespace_tag 4
#define extensions_api_cast_channel_CastMessage_payload_type_tag 5
#define extensions_api_cast_channel_CastMessage_payload_utf8_tag 6
#define extensions_api_cast_channel_CastMessage_payload_binary_tag 7
#define extensions_api_cast_channel_DeviceAuthMessage_challenge_tag 1
#define extensions_api_cast_channel_DeviceAuthMessage_response_tag 2
#define extensions_api_cast_channel_DeviceAuthMessage_error_tag 3

/* Struct field encoding specification for nanopb */
extern const pb_field_t extensions_api_cast_channel_CastMessage_fields[8];
extern const pb_field_t extensions_api_cast_channel_AuthChallenge_fields[1];
extern const pb_field_t extensions_api_cast_channel_AuthResponse_fields[4];
extern const pb_field_t extensions_api_cast_channel_AuthError_fields[2];
extern const pb_field_t extensions_api_cast_channel_DeviceAuthMessage_fields[4];

/* Maximum encoded size of messages (where known) */
/* extensions_api_cast_channel_CastMessage_size depends on runtime parameters */
#define extensions_api_cast_channel_AuthChallenge_size 0
/* extensions_api_cast_channel_AuthResponse_size depends on runtime parameters */
#define extensions_api_cast_channel_AuthError_size 2
#define extensions_api_cast_channel_DeviceAuthMessage_size (12 + extensions_api_cast_channel_AuthResponse_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CAST_CHANNEL_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
